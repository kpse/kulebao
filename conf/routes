# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Authentication
GET           /login                                                             controllers.Auth.login
POST          /login                                                             controllers.Auth.authenticate
GET           /logout                                                            controllers.Auth.logout

# Home page
GET           /                                                                  controllers.Application.index
GET           /admin                                                             controllers.Application.admin
GET           /operation                                                         controllers.Application.operation

POST          /login.do                                                          controllers.Authentication.login
POST          /checkphonenum.do                                                  controllers.Authentication.validateNumber
POST          /receiveBindInfo.do                                                controllers.Authentication.bindNumber
POST          /resetpwd.do                                                       controllers.Authentication.resetPassword
POST          /changepwd.do                                                      controllers.Authentication.changePassword
GET           /upgrade                                                           controllers.Authentication.app(version: Long)

#anglarjs template pages
GET           /templates/*file                                                   controllers.Static.at(path="/public/templates", file)
GET           /*college/templates/*file                                          controllers.Static.ignoreCollege(path="/public/templates", file, college)

GET           /kindergarten/:kg                                                  controllers.SchoolSummaryController.detail(kg: Long)
GET           /kindergarten/:kg/detail                                           controllers.SchoolSummaryController.detail(kg: Long)
POST          /kindergarten/:kg                                                  controllers.SchoolSummaryController.update(kg: Long)
GET           /kindergarten/:kg/preview                                          controllers.SchoolSummaryController.preview(kg: Long)
GET           /kindergarten                                                      controllers.SchoolSummaryController.index()

GET           /kindergarten/:kg/class                                            controllers.ClassController.index(kg: Long)

GET           /kindergarten/:kg/news                                             controllers.NewsController.index(kg: Long, from: Option[Long], to: Option[Long], most:Option[Int])
GET           /kindergarten/:kg/news/:newsId                                     controllers.NewsController.show(kg: Long, newsId: Long)
POST          /kindergarten/:kg/news/:newsId                                     controllers.NewsController.update(kg: Long, newsId: Long)
DELETE        /kindergarten/:kg/news/:newsId                                     controllers.NewsController.deleteOne(kg: Long, newsId: Long)
GET           /kindergarten/:kg/admin/:adminId/news                              controllers.NewsController.indexWithNonPublished(kg: Long, adminId: Long)
POST          /kindergarten/:kg/admin/:adminId/news                              controllers.NewsController.create(kg: Long, adminId: Long)
POST          /kindergarten/:kg/admin/:adminId/news/:newsId                      controllers.NewsController.adminUpdate(kg: Long, adminId: Long, newsId: Long)
DELETE        /kindergarten/:kg/admin/:adminId/news/:newsId                      controllers.NewsController.delete(kg: Long, adminId: Long, newsId: Long)

GET           /kindergarten/:kg/parent                                           controllers.ParentController.index(kg: Long, class_id: Option[Long])
POST          /kindergarten/:kg/parent                                           controllers.ParentController.create(kg: Long)
GET           /kindergarten/:kg/parent/:parentId                                 controllers.ParentController.show(kg: Long, parentId: String)
POST          /kindergarten/:kg/parent/:parentId                                 controllers.ParentController.update(kg: Long, parentId: String)
DELETE        /kindergarten/:kg/parent/:parentId                                 controllers.ParentController.delete(kg: Long, parentId: Long)

GET           /kindergarten/:kg/parent/:parentId/news                            controllers.ReadingNewsController.index(kg: Long, parentId: String)
POST          /kindergarten/:kg/parent/:parentId/news/:newsId                    controllers.ReadingNewsController.create(kg: Long, parentId: Long, newsId: Long)

GET           /kindergarten/:kg/parent/:parentId/child                           controllers.ChildController.index(kg: Long, parentId: String)
GET           /kindergarten/:kg/parent/:parentId/child/:childId                  controllers.ChildController.show(kg: Long, parentId: String, childId: String)
POST          /kindergarten/:kg/parent/:parentId/child/:childId                  controllers.ChildController.update(kg: Long, parentId: String, childId: String)

GET           /kindergarten/:kg/admin/:adminId/news_reading_count/:newsId        controllers.ReadingNewsController.countReading(kg: Long, adminId: Long, newsId: Long)

GET           /kindergarten/:kg/class/:classId/schedule                          controllers.ScheduleController.index(kg: Long, classId: Long)
GET           /kindergarten/:kg/class/:classId/schedule/preview                  controllers.ScheduleController.preview(kg: Long, classId: Long)
GET           /kindergarten/:kg/class/:classId/schedule/:scheduleId              controllers.ScheduleController.show(kg: Long, classId: Long, scheduleId: Long)
POST          /kindergarten/:kg/class/:classId/schedule/:scheduleId              controllers.ScheduleController.update(kg: Long, classId: Long, scheduleId: Long)

GET           /kindergarten/:kg/cookbook                                         controllers.CookbookController.index(kg: Long)
GET           /kindergarten/:kg/cookbook/preview                                 controllers.CookbookController.preview(kg: Long)
GET           /kindergarten/:kg/cookbook/:cookbookId                             controllers.CookbookController.show(kg: Long, cookbookId: Long)
POST          /kindergarten/:kg/cookbook/:cookbookId                             controllers.CookbookController.update(kg: Long, cookbookId: Long)


POST          /kindergarten/:kg/check                                            controllers.CheckInController.create(kg: Long)
GET           /kindergarten/:kg/card/:cardId                                     controllers.CheckInController.show(kg: Long, cardId: String)
GET           /kindergarten/:kg/card                                             controllers.CheckInController.index(kg: Long)

GET           /ws/swipe                                                          controllers.WSController.call
POST          /ws/swipe                                                          controllers.WSController.sendMessage

GET           /app_package                                                       controllers.AppPackageController.last(last: String)
POST          /app_package                                                       controllers.AppPackageController.create

POST          /ws/broadcast                                                      controllers.WSController.sendBroadcastMessage

GET           /ws/fileToken                                                      controllers.WSController.generateToken(bucket: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                      controllers.Assets.at(path="/public", file)
GET           /images/*file                                                      controllers.Static.at(path="/public/images", file)