// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  describe('Controller: BulletinCtrl', function() {
    var BulletinCtrl, scope;
    beforeEach(module('kulebaoApp'));
    BulletinCtrl = {};
    scope = {};
    beforeEach(inject(function($controller, $rootScope) {
      scope = $rootScope.$new();
      return BulletinCtrl = $controller('BulletinCtrl', {
        $scope: scope
      });
    }));
    it('should attach a list of awesomeThings to the scope', function() {
      return expect(BulletinCtrl.kindergarten.id).toBe(1);
    });
    it('should distinguish news which has already been read', function() {
      var news, readnews, user;
      readnews = [
        {
          parent_id: 1,
          news_id: 2
        }
      ];
      news = [
        {
          id: 1
        }, {
          id: 2
        }
      ];
      user = {
        id: 1
      };
      BulletinCtrl.determineReadOrNot(readnews, news, user);
      return expect(news[1].read).toBeTruthy();
    });
    it('should distinguish news which has already been read', function() {
      var news, readnews, user;
      readnews = [
        {
          parent_id: 2,
          news_id: 1
        }, {
          parent_id: 2,
          news_id: 2
        }
      ];
      news = [
        {
          id: 1
        }, {
          id: 2
        }
      ];
      user = {
        id: 2
      };
      BulletinCtrl.determineReadOrNot(readnews, news, user);
      expect(news[0].read).toBeTruthy();
      return expect(news[1].read).toBeTruthy();
    });
    return it('should consider news is unread by default', function() {
      var news, readnews, user;
      readnews = [];
      news = [
        {
          id: 1
        }, {
          id: 2
        }
      ];
      user = {
        id: 1
      };
      BulletinCtrl.determineReadOrNot(readnews, news, user);
      expect(news[0].read).toBe(false);
      return expect(news[1].read).toBe(false);
    });
  });

}).call(this);
